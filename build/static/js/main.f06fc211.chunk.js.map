{"version":3,"sources":["assets/img/img1.jpg","assets/img/img2.jpg","assets/img/img3.jpg","assets/img/img4.jpg","assets/img/img5.jpg","store/ducks/auth.js","store/ducks/index.js","service/axios.js","store/sagas/auth.js","store/sagas/index.js","store/index.js","components/NavBar/SideList.js","components/NavBar/UserActions.js","components/Input/Input.js","components/NavBar/Login.js","components/NavBar/index.js","views/HomePage/tileData.js","views/HomePage/index.js","views/Posts/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","token","user","typesAuth","actionsAuth","username","password","type","payload","rootReducers","combineReducers","auth","state","action","form","formReducer","Axios","axios","create","baseURL","headers","list","path","options","get","then","response","data","post","login","logout","watcherAuth","call","put","authorization","takeLatest","rootSagas","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","SideList","classes","side","toggleDrawer","history","useHistory","className","role","onClick","onKeyDown","List","ListItem","ListItemText","primary","Divider","text","icon","Home","ImportContacts","RecentActors","map","index","Icon","button","key","push","ListItemIcon","Schedule","Category","UserActions","dispatch","useDispatch","anchorRef","useRef","useState","open","setOpen","useSelector","handleClose","event","current","contains","target","handleListKeyDown","preventDefault","Button","ref","aria-controls","undefined","aria-haspopup","prevOpen","style","color","Typography","variant","marginRight","name","AccountCircle","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","MenuItem","Input","label","input","value","onChange","TextField","fullWidth","reduxForm","handleSubmit","Dialog","onClose","aria-labelledby","maxWidth","Form","onSubmit","values","handleSave","DialogTitle","DialogContent","DialogContentText","Field","component","DialogActions","useStyles","makeStyles","theme","root","flexGrow","menuButton","spacing","title","width","NavBar","left","setState","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu","Drawer","img","Img1","author","featured","Img2","Img4","Img3","Img5","marginTop","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","titleBar","HomePage","GridList","cellHeight","tileData","tile","GridListTile","cols","rows","src","alt","GridListTileBar","subtitle","actionIcon","actionPosition","Posts","Routes","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f06fc211.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.ffb7f824.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.4654195d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.020631bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img4.134fdf30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img5.d9d94902.jpg\";","const initialState = {\n  token: '',\n  user: {},\n};\n\nexport const typesAuth = {\n  AUTH_TOKEN: '@auth/AUTH_TOKEN',\n  AUTH_TOKEN_SUCCESS: '@auth/AUTH_TOKEN_SUCCESS',\n  AUTH_TOKEN_ERROR: '@auth/AUTH_TOKEN_ERROR',\n\n  AUTH_LOGIN: '@auth/AUTH_LOGIN',\n  AUTH_LOGIN_SUCCESS: '@auth/AUTH_LOGIN_SUCCESS',\n  AUTH_LOGIN_ERROR: '@auth/AUTH_LOGIN_ERROR',\n\n  AUTH_LOGOUT: '@auth/AUTH_LOGOUT',\n  AUTH_LOGOUT_SUCCESS: '@auth/AUTH_LOGOUT_SUCCESS',\n  AUTH_LOGOUT_ERROR: '@auth/AUTH_LOGOUT_ERROR',\n};\n\nexport const actionsAuth = {\n  auth: (username, password) => ({ type: typesAuth.AUTH_TOKEN, payload: { username, password } }),\n  login: (token) => ({ type: typesAuth.AUTH_LOGIN, payload: { token } }),\n  logout: () => ({ type: typesAuth.AUTH_LOGOUT }),\n};\n\nexport const reducersAuth = (state = initialState, action) => {\n  switch (action.type) {\n    case typesAuth.AUTH_LOGIN_SUCCESS:\n      return {\n        ...state,\n        token: action.payload.token,\n        user: action.payload.user,\n      };\n    case typesAuth.AUTH_LOGOUT_SUCCESS:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport { reducersAuth as auth } from './auth';\n\nconst rootReducers = combineReducers({\n  auth,\n  form: formReducer,\n});\n\nexport default rootReducers;\n","import axios from 'axios';\n\nconst Axios = axios.create({\n  baseURL: 'http://3.16.156.21:3334',\n  headers: {\n    // authorization: `Bearer ${store.getState().auth.token || ''}`,\n  },\n});\n\nexport const list = (path, options = {}) => Axios.get(path, options)\n  .then((response) => response.data);\n\nexport const create = (path, data, options = {}) => Axios.post(path, data, options)\n  .then((response) => response.data);\n\nexport const update = (path, data, options = {}) => Axios.put(path, data, options)\n  .then((response) => response.data);\n\nexport const destroy = (path, options = {}) => Axios.delete(path, options)\n  .then((response) => response.data);\n","import { takeLatest, call, put } from 'redux-saga/effects';\n\nimport { typesAuth } from '../ducks/auth';\n\nimport { create, list } from '../../service/axios';\n\nfunction* auth({ payload: { username, password } }) {\n  try {\n    const response = yield call(create, '/auth', { username, password });\n\n    yield put({ type: typesAuth.AUTH_TOKEN_SUCCESS });\n    yield put({ type: typesAuth.AUTH_LOGIN, payload: response.token });\n  } catch (error) {\n    yield put({ type: typesAuth.AUTH_TOKEN_ERROR });\n  }\n}\n\nfunction* login({ payload }) {\n  try {\n    const response = yield call(list, '/me', {\n      headers: {\n        authorization: `Bearer ${payload}`,\n      },\n    });\n\n    yield put({\n      type: typesAuth.AUTH_LOGIN_SUCCESS,\n      payload: {\n        user: response,\n        token: payload,\n      },\n    });\n  } catch (error) {\n    yield put({ type: typesAuth.AUTH_LOGIN_ERROR });\n  }\n}\n\nfunction* logout() {\n  yield put({ type: typesAuth.AUTH_LOGOUT_SUCCESS });\n}\n\nfunction* watcherAuth() {\n  yield takeLatest(typesAuth.AUTH_TOKEN, auth);\n  yield takeLatest(typesAuth.AUTH_LOGIN, login);\n  yield takeLatest(typesAuth.AUTH_LOGOUT, logout);\n}\n\nexport default watcherAuth;\n","import { all } from 'redux-saga/effects';\n\nimport auth from './auth';\n\nfunction* rootSagas() {\n  yield all([\n    auth(),\n  ]);\n}\n\nexport default rootSagas;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducers from './ducks';\nimport rootSagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducers, composeWithDevTools(applyMiddleware(\n  sagaMiddleware,\n)));\n\nsagaMiddleware.run(rootSagas);\n\nexport default store;\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\n// core\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n// icons\nimport {\n  Home,\n  RecentActors,\n  Category,\n  Schedule,\n  ImportContacts\n} from \"@material-ui/icons\";\n\nconst SideList = ({ classes, side, toggleDrawer }) => {\n  const history = useHistory();\n\n  return (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem>\n          <ListItemText primary=\"Remake Blog\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        {[\n          { text: \"Home\", icon: Home, path: '/' },\n          { text: \"Posts\", icon: ImportContacts, path: '/posts' },\n          { text: \"Autores\", icon: RecentActors, path: '/' }\n        ].map(({ text, icon: Icon, path }, index) => (\n          <ListItem button key={text} onClick={() => history.push(path)}>\n            <ListItemIcon>\n              <Icon />\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\n          { text: \"Recentes\", icon: Schedule },\n          { text: \"Categorias\", icon: Category }\n        ].map(({ text, icon: Icon }, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              <Icon />\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default SideList;\n","import React, { useRef, useState } from 'react';\n\n// import PropTypes from 'prop-types';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n// core\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\n// icons\nimport { AccountCircle } from '@material-ui/icons';\n\nimport { actionsAuth } from '../../store/ducks/auth';\n\nconst UserActions = () => {\n  const dispatch = useDispatch();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const { user, token } = useSelector((state) => state.auth);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n  return (\n    <>\n      <Button\n        ref={anchorRef}\n        aria-controls={open ? 'menu-list-grow' : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n        style={{\n          color: 'white',\n        }}\n      >\n        <Typography variant=\"inherit\" style={{ marginRight: '15px' }}>{token && user.name}</Typography>\n        <AccountCircle />\n      </Button>\n\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList\n                  autoFocusItem={open}\n                  id=\"menu-list-grow\"\n                  onKeyDown={handleListKeyDown}\n                >\n                  <MenuItem onClick={handleClose}>Perfil</MenuItem>\n                  <MenuItem\n                    onClick={(event) => {\n                      handleClose(event);\n                      dispatch(actionsAuth.logout());\n                    }}\n                  >\n                    Logout\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n};\n\nUserActions.propTypes = {};\n\nexport default UserActions;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// core\nimport TextField from '@material-ui/core/TextField';\n\nconst Input = ({ label, type, input }) => {\n  const { value, onChange } = input;\n  return (\n    <div>\n      <TextField\n        fullWidth\n        id=\"standard-basic\"\n        label={label}\n        type={type}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  // string\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  // object\n  input: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Input;\n","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { reduxForm, Form, Field } from 'redux-form';\nimport { useDispatch } from 'react-redux';\n\n// core\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// ducks\nimport { actionsAuth } from '../../store/ducks/auth';\n\n// component\nimport Input from '../Input/Input';\n\nconst Login = ({ handleSubmit }) => {\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const handleSave = ({ username, password }) => {\n    dispatch(actionsAuth.auth(username, password));\n\n    // handleClose();\n  };\n\n  return (\n    <>\n      <Button color=\"inherit\" onClick={handleClickOpen}>\n        Login\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        maxWidth={false}\n        fullWidth\n      >\n        <Form onSubmit={handleSubmit((values) => handleSave(values))}>\n          <DialogTitle id=\"form-dialog-title\">Remake Blog - Login</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n            Bem vindo a plataforma de blog da Remake.\n            Acesso agora e fique por dentro de todas as novidades do\n            mundo da tecnologia com as notícias mais atuais do momento.\n            </DialogContentText>\n            <Field name=\"username\" component={Input} label=\"Username\" type=\"text\" />\n            <Field name=\"password\" component={Input} label=\"Password\" type=\"password\" />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n            Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n            >\n            Login\n            </Button>\n          </DialogActions>\n        </Form>\n      </Dialog>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  // func\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: 'auth',\n})(Login);\n","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux'\n\n// core\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n// icons\nimport { Menu } from '@material-ui/icons';\n\n// components\nimport SideList from './SideList';\nimport UserActions from './UserActions';\nimport Login from './Login';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n}));\n\nconst NavBar = ({ title }) => {\n  const classes = useStyles();\n\n  const { token } = useSelector((state) => state.auth);\n\n  const [state, setState] = useState({\n    left: false,\n  });\n\n  const toggleDrawer = (side, open) => (event) => {\n    if (\n      event.type === 'keydown'\n      && (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          className={classes.menuButton}\n          aria-label=\"menu\"\n          onClick={toggleDrawer('left', true)}\n        >\n          <Menu />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}\n        </Typography>\n        {token ? (\n          <UserActions />\n        ) : (\n          <Login />\n        )}\n      </Toolbar>\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n        <SideList side=\"left\" toggleDrawer={toggleDrawer} classes={classes} />\n      </Drawer>\n    </AppBar>\n  );\n};\n\nNavBar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default NavBar;\n","import Img1 from '../../assets/img/img1.jpg'\nimport Img2 from '../../assets/img/img2.jpg'\nimport Img3 from '../../assets/img/img3.jpg'\nimport Img4 from '../../assets/img/img4.jpg'\nimport Img5 from '../../assets/img/img5.jpg'\n\n\nexport default [\n  {\n    id: 1,\n    img: Img1,\n    title: \"Tecnologia 1\",\n    author: \"Matheus Paice\",\n    featured: true\n  },\n  {\n    id: 2,\n    img: Img2,\n    title: \"Tecnologia 2\",\n    author: \"Matheus Paice\",\n    featured: false\n  },\n  {\n    id: 3,\n    img: Img4,\n    title: \"Tecnologia 3\",\n    author: \"Matheus Paice\",\n    featured: false\n  },\n  {\n    id: 4,\n    img: Img3,\n    title: \"Tecnologia 4\",\n    author: \"Matheus Paice\",\n    featured: true\n  },\n  {\n    id: 5,\n    img: Img5,\n    title: \"Tecnologia 5\",\n    author: \"Matheus Paice\",\n    featured: false\n  },\n  {\n    id: 6,\n    img: Img1,\n    title: \"Tecnologia 5\",\n    author: \"Matheus Paice\",\n    featured: false\n  },\n];\n","import React from \"react\";\n\n// core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\n// import InfoIcon from '@material-ui/icons/Info';\n\n// components\nimport NavBar from \"../../components/NavBar\";\n\n// data\nimport tileData from \"./tileData\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '70px',\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 717,\n    // height: 450,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\"\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <NavBar title=\"Home\" />\n      <div className={classes.root}>\n        <GridList cellHeight={200} spacing={4} className={classes.gridList}>\n          {tileData.map(tile => (\n            <GridListTile\n              key={tile.id}\n              cols={tile.featured ? 2 : 1}\n              rows={tile.featured ? 2 : 1}\n            >\n              <img src={tile.img} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n                subtitle={<span>by: {tile.author}</span>}\n                // titlePosition=\"top\"\n                actionIcon={\n                  <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n                }\n                actionPosition=\"left\"\n                className={classes.titleBar}\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\n\nimport NavBar from \"../../components/NavBar\";\n\nconst Posts = () => {\n  return (\n    <div>\n      <NavBar title=\"Posts\" />\n      <div style={{ marginTop: \"70px\" }}>Posts</div>\n    </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// views\nimport HomePage from './views/HomePage';\nimport Posts from './views/Posts';\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route path=\"/posts\">\n          <Posts />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\n\n// store\nimport store from './store';\n\n// routes\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routes />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}